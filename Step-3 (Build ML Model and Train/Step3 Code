def ml_model_build_and_train():
    files_path_aggregated = "/Users/rahulchalla/airflow/data/aggregated_data/aggregated_data.parquet"
    from sklearn.model_selection import train_test_split
    from sklearn.ensemble import RandomForestRegressor
    from sklearn.metrics import mean_absolute_error, mean_squared_error
    import pickle

    #Code to build a RandomForest Regressor Model, trian it and save the model to a path.
    
    data = pd.read_parquet(files_path_aggregated)
    # Assume `data` is loaded as a Pandas DataFrame
    data['Date'] = pd.to_datetime(data['Date'])
    data.set_index('Date', inplace=True)

    # Remove rows with NaN values
    data.dropna(inplace=True)
    Data1 = data.sample(frac = 0.05, random_state=42)

    # Select features and target
    features = ['vol_moving_avg', 'adj_close_rolling_med']
    target = 'Volume'

    X = Data1[features]
    y = Data1[target]

    # Split data into train and test sets
    X_train, X_test, y_train, y_test = train_test_split(X.values, y.values, test_size=0.2, random_state=42)

    # Create a RandomForestRegressor model
    model = RandomForestRegressor(n_estimators=100, random_state=42)

    # Train the model
    model.fit(X_train, y_train)

    # Train the model
    y_pred = model.predict(X_test)

    # Calculate the Mean Absolute Error and Mean Squared Error
    mae = mean_absolute_error(y_test, y_pred)
    mse = mean_squared_error(y_test, y_pred)

    # Saving the trained model.
    model_save_path = "/Users/rahulchalla/airflow/data/models/randomforestmodel_stocksdata/randomforest_model_stock_volume_prediction.sav"
    pickle.dump(model, open(model_save_path, 'wb'))
